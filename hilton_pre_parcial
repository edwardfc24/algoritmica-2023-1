{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import neighbors\n",
    "from sklearn.model_selection import train_test_split\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\hilto\\AppData\\Local\\Temp\\ipykernel_8028\\3193013562.py:1: DtypeWarning: Columns (2,5,6) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  df = pd.read_csv('app_alumno.csv')\n"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv('app_alumno.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>ponderador_ciencias_sociales</th>\n",
       "      <th>escuela_id</th>\n",
       "      <th>nivel_id</th>\n",
       "      <th>year_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.048575e+06</td>\n",
       "      <td>9.591080e+05</td>\n",
       "      <td>9.767360e+05</td>\n",
       "      <td>1.019555e+06</td>\n",
       "      <td>1.027320e+06</td>\n",
       "      <td>1.048575e+06</td>\n",
       "      <td>1.048575e+06</td>\n",
       "      <td>1.048575e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.242880e+05</td>\n",
       "      <td>1.358340e+07</td>\n",
       "      <td>1.312151e+07</td>\n",
       "      <td>6.445226e+06</td>\n",
       "      <td>6.241860e+06</td>\n",
       "      <td>7.420359e+09</td>\n",
       "      <td>2.416415e+00</td>\n",
       "      <td>2.014934e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.026977e+05</td>\n",
       "      <td>1.287965e+07</td>\n",
       "      <td>1.180998e+07</td>\n",
       "      <td>1.235744e+07</td>\n",
       "      <td>1.230465e+07</td>\n",
       "      <td>7.742966e+09</td>\n",
       "      <td>4.929642e-01</td>\n",
       "      <td>1.435797e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>6.000030e+07</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>2.013000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.621445e+05</td>\n",
       "      <td>1.027723e+07</td>\n",
       "      <td>1.015207e+07</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>1.527970e+09</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>2.013000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.242880e+05</td>\n",
       "      <td>1.296045e+07</td>\n",
       "      <td>1.279296e+07</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>3.380147e+09</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>2.016000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7.864315e+05</td>\n",
       "      <td>1.528762e+07</td>\n",
       "      <td>1.585059e+07</td>\n",
       "      <td>1.375857e+07</td>\n",
       "      <td>1.326101e+07</td>\n",
       "      <td>1.250075e+10</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>2.016000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.048575e+06</td>\n",
       "      <td>9.970589e+07</td>\n",
       "      <td>9.910502e+07</td>\n",
       "      <td>9.991204e+07</td>\n",
       "      <td>9.877273e+07</td>\n",
       "      <td>3.440792e+10</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>2.016000e+03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id  ponderador_lengua  ponderador_matematica   \n",
       "count  1.048575e+06       9.591080e+05           9.767360e+05  \\\n",
       "mean   5.242880e+05       1.358340e+07           1.312151e+07   \n",
       "std    3.026977e+05       1.287965e+07           1.180998e+07   \n",
       "min    1.000000e+00      -1.000000e+00          -1.000000e+00   \n",
       "25%    2.621445e+05       1.027723e+07           1.015207e+07   \n",
       "50%    5.242880e+05       1.296045e+07           1.279296e+07   \n",
       "75%    7.864315e+05       1.528762e+07           1.585059e+07   \n",
       "max    1.048575e+06       9.970589e+07           9.910502e+07   \n",
       "\n",
       "       ponderador_ciencias_naturales  ponderador_ciencias_sociales   \n",
       "count                   1.019555e+06                  1.027320e+06  \\\n",
       "mean                    6.445226e+06                  6.241860e+06   \n",
       "std                     1.235744e+07                  1.230465e+07   \n",
       "min                    -1.000000e+00                 -1.000000e+00   \n",
       "25%                    -1.000000e+00                 -1.000000e+00   \n",
       "50%                    -1.000000e+00                 -1.000000e+00   \n",
       "75%                     1.375857e+07                  1.326101e+07   \n",
       "max                     9.991204e+07                  9.877273e+07   \n",
       "\n",
       "         escuela_id      nivel_id       year_id  \n",
       "count  1.048575e+06  1.048575e+06  1.048575e+06  \n",
       "mean   7.420359e+09  2.416415e+00  2.014934e+03  \n",
       "std    7.742966e+09  4.929642e-01  1.435797e+00  \n",
       "min    6.000030e+07  2.000000e+00  2.013000e+03  \n",
       "25%    1.527970e+09  2.000000e+00  2.013000e+03  \n",
       "50%    3.380147e+09  2.000000e+00  2.016000e+03  \n",
       "75%    1.250075e+10  3.000000e+00  2.016000e+03  \n",
       "max    3.440792e+10  3.000000e+00  2.016000e+03  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>sexo</th>\n",
       "      <th>indice_socioeconomico</th>\n",
       "      <th>nivel_desemp_matematica</th>\n",
       "      <th>nivel_desemp_lengua</th>\n",
       "      <th>nivel_desemp_ciencias_sociales</th>\n",
       "      <th>nivel_desemp_ciencias_naturales</th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>...</th>\n",
       "      <th>tiene_smartphone</th>\n",
       "      <th>tiene_consola</th>\n",
       "      <th>tiene_smarttv</th>\n",
       "      <th>tiene_cable</th>\n",
       "      <th>tiene_internet</th>\n",
       "      <th>repeticion_primaria</th>\n",
       "      <th>repeticion_secundaria</th>\n",
       "      <th>escuela_id</th>\n",
       "      <th>nivel_id</th>\n",
       "      <th>year_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>372547</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>120618006</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>372580</td>\n",
       "      <td>f</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>avanzado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15686325.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>220059411</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>372581</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>220099011</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>372582</td>\n",
       "      <td>m</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>220168311</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>372593</td>\n",
       "      <td>m</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>222762111</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>372601</td>\n",
       "      <td>f</td>\n",
       "      <td>alto</td>\n",
       "      <td>nc</td>\n",
       "      <td>avanzado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11619838.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>240865212</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>372611</td>\n",
       "      <td>m</td>\n",
       "      <td>alto</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>260107913</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>372617</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>260950313</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>372637</td>\n",
       "      <td>f</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13068876.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>281768214</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>372644</td>\n",
       "      <td>f</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>300276015</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>372655</td>\n",
       "      <td>nc</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37335227.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>302355015</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>372660</td>\n",
       "      <td>f</td>\n",
       "      <td>alto</td>\n",
       "      <td>nc</td>\n",
       "      <td>avanzado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11679952.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>320699216</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>372684</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>342014517</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>372692</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>360871218</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>372710</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>381126719</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id sexo indice_socioeconomico nivel_desemp_matematica   \n",
       "0   372547   nc                    nc                      nc  \\\n",
       "1   372580    f                 medio                      nc   \n",
       "2   372581   nc                    nc                      nc   \n",
       "3   372582    m                 medio                      nc   \n",
       "4   372593    m                    nc                      nc   \n",
       "5   372601    f                  alto                      nc   \n",
       "6   372611    m                  alto                      nc   \n",
       "7   372617   nc                    nc                      nc   \n",
       "8   372637    f                 medio                      nc   \n",
       "9   372644    f                 medio                      nc   \n",
       "10  372655   nc                 medio                      nc   \n",
       "11  372660    f                  alto                      nc   \n",
       "12  372684   nc                    nc                      nc   \n",
       "13  372692   nc                    nc                      nc   \n",
       "14  372710   nc                    nc                      nc   \n",
       "\n",
       "      nivel_desemp_lengua nivel_desemp_ciencias_sociales   \n",
       "0                      nc                            NaN  \\\n",
       "1                avanzado                            NaN   \n",
       "2                      nc                            NaN   \n",
       "3                      nc                            NaN   \n",
       "4                      nc                            NaN   \n",
       "5                avanzado                            NaN   \n",
       "6                      nc                            NaN   \n",
       "7                      nc                            NaN   \n",
       "8   por_debajo_del_basico                            NaN   \n",
       "9                      nc                            NaN   \n",
       "10          satisfactorio                            NaN   \n",
       "11               avanzado                            NaN   \n",
       "12                     nc                            NaN   \n",
       "13                     nc                            NaN   \n",
       "14                     nc                            NaN   \n",
       "\n",
       "   nivel_desemp_ciencias_naturales  ponderador_lengua  ponderador_matematica   \n",
       "0                              NaN                NaN                    NaN  \\\n",
       "1                              NaN         15686325.0                    NaN   \n",
       "2                              NaN                NaN                    NaN   \n",
       "3                              NaN                NaN                    NaN   \n",
       "4                              NaN                NaN                    NaN   \n",
       "5                              NaN         11619838.0                    NaN   \n",
       "6                              NaN                NaN                    NaN   \n",
       "7                              NaN                NaN                    NaN   \n",
       "8                              NaN         13068876.0                    NaN   \n",
       "9                              NaN                NaN                    NaN   \n",
       "10                             NaN         37335227.0                    NaN   \n",
       "11                             NaN         11679952.0                    NaN   \n",
       "12                             NaN                NaN                    NaN   \n",
       "13                             NaN                NaN                    NaN   \n",
       "14                             NaN                NaN                    NaN   \n",
       "\n",
       "    ponderador_ciencias_naturales  ...  tiene_smartphone tiene_consola   \n",
       "0                            -1.0  ...                nc            nc  \\\n",
       "1                            -1.0  ...                no            no   \n",
       "2                            -1.0  ...                nc            nc   \n",
       "3                            -1.0  ...                no            no   \n",
       "4                            -1.0  ...                nc            nc   \n",
       "5                            -1.0  ...                no            si   \n",
       "6                            -1.0  ...                si            si   \n",
       "7                            -1.0  ...                nc            nc   \n",
       "8                            -1.0  ...                no            no   \n",
       "9                            -1.0  ...                no            no   \n",
       "10                           -1.0  ...                no            no   \n",
       "11                           -1.0  ...                si            no   \n",
       "12                           -1.0  ...                si            si   \n",
       "13                           -1.0  ...                nc            nc   \n",
       "14                           -1.0  ...                si            si   \n",
       "\n",
       "   tiene_smarttv tiene_cable tiene_internet repeticion_primaria   \n",
       "0             nc          nc             nc                  nc  \\\n",
       "1             si          si             si                  no   \n",
       "2             nc          nc             nc                  nc   \n",
       "3             si          si             si                  no   \n",
       "4             nc          nc             nc                  no   \n",
       "5             no          si             si                  no   \n",
       "6             si          no             si                  no   \n",
       "7             nc          nc             nc                  nc   \n",
       "8             no          no             no                  no   \n",
       "9             si          si             si                  no   \n",
       "10            no          no             si                  no   \n",
       "11            si          si             si                  no   \n",
       "12            si          si             si                  nc   \n",
       "13            nc          nc             nc                  nc   \n",
       "14            si          si             si                  nc   \n",
       "\n",
       "   repeticion_secundaria escuela_id nivel_id year_id  \n",
       "0                     nc  120618006        2    2016  \n",
       "1                     nc  220059411        2    2016  \n",
       "2                     nc  220099011        2    2016  \n",
       "3                     nc  220168311        2    2016  \n",
       "4                     nc  222762111        2    2016  \n",
       "5                     nc  240865212        2    2016  \n",
       "6                     nc  260107913        2    2016  \n",
       "7                     nc  260950313        2    2016  \n",
       "8                     nc  281768214        2    2016  \n",
       "9                     nc  300276015        2    2016  \n",
       "10                    nc  302355015        2    2016  \n",
       "11                    nc  320699216        2    2016  \n",
       "12                    nc  342014517        2    2016  \n",
       "13                    nc  360871218        2    2016  \n",
       "14                    nc  381126719        2    2016  \n",
       "\n",
       "[15 rows x 25 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>sexo</th>\n",
       "      <th>indice_socioeconomico</th>\n",
       "      <th>nivel_desemp_matematica</th>\n",
       "      <th>nivel_desemp_lengua</th>\n",
       "      <th>nivel_desemp_ciencias_sociales</th>\n",
       "      <th>nivel_desemp_ciencias_naturales</th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>...</th>\n",
       "      <th>tiene_smartphone</th>\n",
       "      <th>tiene_consola</th>\n",
       "      <th>tiene_smarttv</th>\n",
       "      <th>tiene_cable</th>\n",
       "      <th>tiene_internet</th>\n",
       "      <th>repeticion_primaria</th>\n",
       "      <th>repeticion_secundaria</th>\n",
       "      <th>escuela_id</th>\n",
       "      <th>nivel_id</th>\n",
       "      <th>year_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1048570</th>\n",
       "      <td>372490</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>avanzado</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>13810811.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>14685918.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>27068807733</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1048571</th>\n",
       "      <td>372503</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>basico</td>\n",
       "      <td>16884559.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>18579443.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>27906066731</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1048572</th>\n",
       "      <td>372505</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>13071498.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>28383181233</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1048573</th>\n",
       "      <td>372511</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>16884559.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>28802867232</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1048574</th>\n",
       "      <td>372519</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>13071498.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>13933698.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>29244413234</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id sexo indice_socioeconomico nivel_desemp_matematica   \n",
       "1048570  372490   nc                   NaN                      nc  \\\n",
       "1048571  372503   nc                   NaN                      nc   \n",
       "1048572  372505   nc                   NaN                      nc   \n",
       "1048573  372511   nc                   NaN                      nc   \n",
       "1048574  372519   nc                   NaN                      nc   \n",
       "\n",
       "           nivel_desemp_lengua nivel_desemp_ciencias_sociales   \n",
       "1048570          satisfactorio                       avanzado  \\\n",
       "1048571  por_debajo_del_basico          por_debajo_del_basico   \n",
       "1048572  por_debajo_del_basico                             nc   \n",
       "1048573          satisfactorio                             nc   \n",
       "1048574          satisfactorio          por_debajo_del_basico   \n",
       "\n",
       "        nivel_desemp_ciencias_naturales  ponderador_lengua   \n",
       "1048570                   satisfactorio         13810811.0  \\\n",
       "1048571                          basico         16884559.0   \n",
       "1048572                              nc         13071498.0   \n",
       "1048573                              nc         16884559.0   \n",
       "1048574           por_debajo_del_basico         13071498.0   \n",
       "\n",
       "         ponderador_matematica  ponderador_ciencias_naturales  ...   \n",
       "1048570                   -1.0                     14685918.0  ...  \\\n",
       "1048571                   -1.0                     18579443.0  ...   \n",
       "1048572                   -1.0                           -1.0  ...   \n",
       "1048573                   -1.0                           -1.0  ...   \n",
       "1048574                   -1.0                     13933698.0  ...   \n",
       "\n",
       "         tiene_smartphone tiene_consola tiene_smarttv tiene_cable   \n",
       "1048570                nc            nc            nc          nc  \\\n",
       "1048571                nc            nc            nc          nc   \n",
       "1048572                nc            nc            nc          nc   \n",
       "1048573                nc            nc            nc          nc   \n",
       "1048574                nc            nc            nc          nc   \n",
       "\n",
       "        tiene_internet repeticion_primaria repeticion_secundaria   escuela_id   \n",
       "1048570             nc                  nc                    nc  27068807733  \\\n",
       "1048571             nc                  nc                    nc  27906066731   \n",
       "1048572             nc                  nc                    nc  28383181233   \n",
       "1048573             nc                  nc                    nc  28802867232   \n",
       "1048574             nc                  nc                    nc  29244413234   \n",
       "\n",
       "        nivel_id year_id  \n",
       "1048570        3    2013  \n",
       "1048571        3    2013  \n",
       "1048572        3    2013  \n",
       "1048573        3    2013  \n",
       "1048574        3    2013  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(['id','sexo', 'nivel_desemp_matematica','nivel_desemp_lengua','nivel_desemp_ciencias_sociales','nivel_desemp_ciencias_naturales','escuela_id','nivel_id','year_id'], axis='columns', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Elimino las filas con el valor de no contesta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "valor_a_eliminar = 'nc'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(df[df.values == valor_a_eliminar].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>ponderador_ciencias_sociales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.901000e+03</td>\n",
       "      <td>8.160000e+03</td>\n",
       "      <td>7.637000e+03</td>\n",
       "      <td>7.983000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.365120e+07</td>\n",
       "      <td>1.264564e+07</td>\n",
       "      <td>1.391279e+07</td>\n",
       "      <td>1.312797e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.282406e+07</td>\n",
       "      <td>1.029948e+07</td>\n",
       "      <td>1.108285e+07</td>\n",
       "      <td>1.069096e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.018872e+07</td>\n",
       "      <td>1.008834e+07</td>\n",
       "      <td>1.037718e+07</td>\n",
       "      <td>1.026119e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.191022e+07</td>\n",
       "      <td>1.197619e+07</td>\n",
       "      <td>1.240713e+07</td>\n",
       "      <td>1.211469e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.590190e+07</td>\n",
       "      <td>1.592683e+07</td>\n",
       "      <td>1.644164e+07</td>\n",
       "      <td>1.629795e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.767036e+07</td>\n",
       "      <td>9.229690e+07</td>\n",
       "      <td>9.835092e+07</td>\n",
       "      <td>8.897400e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       ponderador_lengua  ponderador_matematica   \n",
       "count       7.901000e+03           8.160000e+03  \\\n",
       "mean        1.365120e+07           1.264564e+07   \n",
       "std         1.282406e+07           1.029948e+07   \n",
       "min         1.000000e+00           1.000000e+00   \n",
       "25%         1.018872e+07           1.008834e+07   \n",
       "50%         1.191022e+07           1.197619e+07   \n",
       "75%         1.590190e+07           1.592683e+07   \n",
       "max         9.767036e+07           9.229690e+07   \n",
       "\n",
       "       ponderador_ciencias_naturales  ponderador_ciencias_sociales  \n",
       "count                   7.637000e+03                  7.983000e+03  \n",
       "mean                    1.391279e+07                  1.312797e+07  \n",
       "std                     1.108285e+07                  1.069096e+07  \n",
       "min                     1.000000e+00                  1.000000e+00  \n",
       "25%                     1.037718e+07                  1.026119e+07  \n",
       "50%                     1.240713e+07                  1.211469e+07  \n",
       "75%                     1.644164e+07                  1.629795e+07  \n",
       "max                     9.835092e+07                  8.897400e+07  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.indice_socioeconomico =df.indice_socioeconomico.map({'alto':0,'bajo':1,'medio':2})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_notebook =df.tiene_notebook.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_pc =df.tiene_pc.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_tablet =df.tiene_tablet.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_celular =df.tiene_celular.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_smartphone =df.tiene_smartphone.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_consola =df.tiene_consola.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_smarttv =df.tiene_smarttv.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_cable =df.tiene_cable.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_internet =df.tiene_internet.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.repeticion_primaria =df.repeticion_primaria.map({'una_vez':0,'dos_veces':1,'tres_veces_o_mas':2,'no':3})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.repeticion_secundaria =df.repeticion_secundaria.map({'una_vez':0,'dos_veces':1,'tres_veces_o_mas':2,'no':3})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_x = df.drop('repeticion_secundaria', axis=1)\n",
    "data_y = df.repeticion_secundaria"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_x, test_x, train_y, test_y = train_test_split(data_x, data_y, test_size=0.1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "k_neighbors = neighbors.KNeighborsClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier()"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "k_neighbors.fit(train_x, train_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>indice_socioeconomico</th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>ponderador_ciencias_sociales</th>\n",
       "      <th>tiene_notebook</th>\n",
       "      <th>tiene_pc</th>\n",
       "      <th>tiene_tablet</th>\n",
       "      <th>tiene_celular</th>\n",
       "      <th>tiene_smartphone</th>\n",
       "      <th>tiene_consola</th>\n",
       "      <th>tiene_smarttv</th>\n",
       "      <th>tiene_cable</th>\n",
       "      <th>tiene_internet</th>\n",
       "      <th>repeticion_primaria</th>\n",
       "      <th>repeticion_secundaria</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6.387000e+03</td>\n",
       "      <td>6.387000e+03</td>\n",
       "      <td>6.387000e+03</td>\n",
       "      <td>6.387000e+03</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.450133</td>\n",
       "      <td>1.275851e+07</td>\n",
       "      <td>1.184815e+07</td>\n",
       "      <td>1.326880e+07</td>\n",
       "      <td>1.238272e+07</td>\n",
       "      <td>0.259746</td>\n",
       "      <td>0.371066</td>\n",
       "      <td>0.650697</td>\n",
       "      <td>0.123219</td>\n",
       "      <td>0.600282</td>\n",
       "      <td>0.620009</td>\n",
       "      <td>0.486927</td>\n",
       "      <td>0.348834</td>\n",
       "      <td>0.252231</td>\n",
       "      <td>2.822295</td>\n",
       "      <td>2.579145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.797238</td>\n",
       "      <td>1.145383e+07</td>\n",
       "      <td>9.497329e+06</td>\n",
       "      <td>1.006893e+07</td>\n",
       "      <td>9.969980e+06</td>\n",
       "      <td>0.438530</td>\n",
       "      <td>0.483128</td>\n",
       "      <td>0.476787</td>\n",
       "      <td>0.328714</td>\n",
       "      <td>0.489879</td>\n",
       "      <td>0.485422</td>\n",
       "      <td>0.499868</td>\n",
       "      <td>0.476639</td>\n",
       "      <td>0.434327</td>\n",
       "      <td>0.697778</td>\n",
       "      <td>1.000841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.011767e+07</td>\n",
       "      <td>1.004593e+07</td>\n",
       "      <td>1.030098e+07</td>\n",
       "      <td>1.022637e+07</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.178562e+07</td>\n",
       "      <td>1.173553e+07</td>\n",
       "      <td>1.209267e+07</td>\n",
       "      <td>1.175928e+07</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.540802e+07</td>\n",
       "      <td>1.512500e+07</td>\n",
       "      <td>1.597413e+07</td>\n",
       "      <td>1.560333e+07</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>9.767036e+07</td>\n",
       "      <td>9.229690e+07</td>\n",
       "      <td>9.066093e+07</td>\n",
       "      <td>8.897400e+07</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       indice_socioeconomico  ponderador_lengua  ponderador_matematica   \n",
       "count            6387.000000       6.387000e+03           6.387000e+03  \\\n",
       "mean                1.450133       1.275851e+07           1.184815e+07   \n",
       "std                 0.797238       1.145383e+07           9.497329e+06   \n",
       "min                 0.000000       1.000000e+00           1.000000e+00   \n",
       "25%                 1.000000       1.011767e+07           1.004593e+07   \n",
       "50%                 2.000000       1.178562e+07           1.173553e+07   \n",
       "75%                 2.000000       1.540802e+07           1.512500e+07   \n",
       "max                 2.000000       9.767036e+07           9.229690e+07   \n",
       "\n",
       "       ponderador_ciencias_naturales  ponderador_ciencias_sociales   \n",
       "count                   6.387000e+03                  6.387000e+03  \\\n",
       "mean                    1.326880e+07                  1.238272e+07   \n",
       "std                     1.006893e+07                  9.969980e+06   \n",
       "min                     1.000000e+00                  1.000000e+00   \n",
       "25%                     1.030098e+07                  1.022637e+07   \n",
       "50%                     1.209267e+07                  1.175928e+07   \n",
       "75%                     1.597413e+07                  1.560333e+07   \n",
       "max                     9.066093e+07                  8.897400e+07   \n",
       "\n",
       "       tiene_notebook     tiene_pc  tiene_tablet  tiene_celular   \n",
       "count     6387.000000  6387.000000   6387.000000    6387.000000  \\\n",
       "mean         0.259746     0.371066      0.650697       0.123219   \n",
       "std          0.438530     0.483128      0.476787       0.328714   \n",
       "min          0.000000     0.000000      0.000000       0.000000   \n",
       "25%          0.000000     0.000000      0.000000       0.000000   \n",
       "50%          0.000000     0.000000      1.000000       0.000000   \n",
       "75%          1.000000     1.000000      1.000000       0.000000   \n",
       "max          1.000000     1.000000      1.000000       1.000000   \n",
       "\n",
       "       tiene_smartphone  tiene_consola  tiene_smarttv  tiene_cable   \n",
       "count       6387.000000    6387.000000    6387.000000  6387.000000  \\\n",
       "mean           0.600282       0.620009       0.486927     0.348834   \n",
       "std            0.489879       0.485422       0.499868     0.476639   \n",
       "min            0.000000       0.000000       0.000000     0.000000   \n",
       "25%            0.000000       0.000000       0.000000     0.000000   \n",
       "50%            1.000000       1.000000       0.000000     0.000000   \n",
       "75%            1.000000       1.000000       1.000000     1.000000   \n",
       "max            1.000000       1.000000       1.000000     1.000000   \n",
       "\n",
       "       tiene_internet  repeticion_primaria  repeticion_secundaria  \n",
       "count     6387.000000          6387.000000            6387.000000  \n",
       "mean         0.252231             2.822295               2.579145  \n",
       "std          0.434327             0.697778               1.000841  \n",
       "min          0.000000             0.000000               0.000000  \n",
       "25%          0.000000             3.000000               3.000000  \n",
       "50%          0.000000             3.000000               3.000000  \n",
       "75%          1.000000             3.000000               3.000000  \n",
       "max          1.000000             3.000000               3.000000  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Score: 80.91000000000001%\n"
     ]
    }
   ],
   "source": [
    "print(f'Score: {round(k_neighbors.score(test_x, test_y), 4) * 100}%')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['indice_socioeconomico',\n",
       " 'ponderador_lengua',\n",
       " 'ponderador_matematica',\n",
       " 'ponderador_ciencias_naturales',\n",
       " 'ponderador_ciencias_sociales',\n",
       " 'tiene_notebook',\n",
       " 'tiene_pc',\n",
       " 'tiene_tablet',\n",
       " 'tiene_celular',\n",
       " 'tiene_smartphone',\n",
       " 'tiene_consola',\n",
       " 'tiene_smarttv',\n",
       " 'tiene_cable',\n",
       " 'tiene_internet',\n",
       " 'repeticion_primaria',\n",
       " 'repeticion_secundaria']"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns.tolist()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "institucion_env",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 722,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import tree\n",
    "from sklearn.model_selection import train_test_split\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 723,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 724,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\hilto\\AppData\\Local\\Temp\\ipykernel_15796\\3193013562.py:1: DtypeWarning: Columns (2,5,6) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  df = pd.read_csv('app_alumno.csv')\n"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv('app_alumno.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 725,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>ponderador_ciencias_sociales</th>\n",
       "      <th>escuela_id</th>\n",
       "      <th>nivel_id</th>\n",
       "      <th>year_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.048575e+06</td>\n",
       "      <td>9.591080e+05</td>\n",
       "      <td>9.767360e+05</td>\n",
       "      <td>1.019555e+06</td>\n",
       "      <td>1.027320e+06</td>\n",
       "      <td>1.048575e+06</td>\n",
       "      <td>1.048575e+06</td>\n",
       "      <td>1.048575e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.242880e+05</td>\n",
       "      <td>1.358340e+07</td>\n",
       "      <td>1.312151e+07</td>\n",
       "      <td>6.445226e+06</td>\n",
       "      <td>6.241860e+06</td>\n",
       "      <td>7.420359e+09</td>\n",
       "      <td>2.416415e+00</td>\n",
       "      <td>2.014934e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.026977e+05</td>\n",
       "      <td>1.287965e+07</td>\n",
       "      <td>1.180998e+07</td>\n",
       "      <td>1.235744e+07</td>\n",
       "      <td>1.230465e+07</td>\n",
       "      <td>7.742966e+09</td>\n",
       "      <td>4.929642e-01</td>\n",
       "      <td>1.435797e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>6.000030e+07</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>2.013000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.621445e+05</td>\n",
       "      <td>1.027723e+07</td>\n",
       "      <td>1.015207e+07</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>1.527970e+09</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>2.013000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.242880e+05</td>\n",
       "      <td>1.296045e+07</td>\n",
       "      <td>1.279296e+07</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>3.380147e+09</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>2.016000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7.864315e+05</td>\n",
       "      <td>1.528762e+07</td>\n",
       "      <td>1.585059e+07</td>\n",
       "      <td>1.375857e+07</td>\n",
       "      <td>1.326101e+07</td>\n",
       "      <td>1.250075e+10</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>2.016000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.048575e+06</td>\n",
       "      <td>9.970589e+07</td>\n",
       "      <td>9.910502e+07</td>\n",
       "      <td>9.991204e+07</td>\n",
       "      <td>9.877273e+07</td>\n",
       "      <td>3.440792e+10</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>2.016000e+03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id  ponderador_lengua  ponderador_matematica   \n",
       "count  1.048575e+06       9.591080e+05           9.767360e+05  \\\n",
       "mean   5.242880e+05       1.358340e+07           1.312151e+07   \n",
       "std    3.026977e+05       1.287965e+07           1.180998e+07   \n",
       "min    1.000000e+00      -1.000000e+00          -1.000000e+00   \n",
       "25%    2.621445e+05       1.027723e+07           1.015207e+07   \n",
       "50%    5.242880e+05       1.296045e+07           1.279296e+07   \n",
       "75%    7.864315e+05       1.528762e+07           1.585059e+07   \n",
       "max    1.048575e+06       9.970589e+07           9.910502e+07   \n",
       "\n",
       "       ponderador_ciencias_naturales  ponderador_ciencias_sociales   \n",
       "count                   1.019555e+06                  1.027320e+06  \\\n",
       "mean                    6.445226e+06                  6.241860e+06   \n",
       "std                     1.235744e+07                  1.230465e+07   \n",
       "min                    -1.000000e+00                 -1.000000e+00   \n",
       "25%                    -1.000000e+00                 -1.000000e+00   \n",
       "50%                    -1.000000e+00                 -1.000000e+00   \n",
       "75%                     1.375857e+07                  1.326101e+07   \n",
       "max                     9.991204e+07                  9.877273e+07   \n",
       "\n",
       "         escuela_id      nivel_id       year_id  \n",
       "count  1.048575e+06  1.048575e+06  1.048575e+06  \n",
       "mean   7.420359e+09  2.416415e+00  2.014934e+03  \n",
       "std    7.742966e+09  4.929642e-01  1.435797e+00  \n",
       "min    6.000030e+07  2.000000e+00  2.013000e+03  \n",
       "25%    1.527970e+09  2.000000e+00  2.013000e+03  \n",
       "50%    3.380147e+09  2.000000e+00  2.016000e+03  \n",
       "75%    1.250075e+10  3.000000e+00  2.016000e+03  \n",
       "max    3.440792e+10  3.000000e+00  2.016000e+03  "
      ]
     },
     "execution_count": 725,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 726,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>sexo</th>\n",
       "      <th>indice_socioeconomico</th>\n",
       "      <th>nivel_desemp_matematica</th>\n",
       "      <th>nivel_desemp_lengua</th>\n",
       "      <th>nivel_desemp_ciencias_sociales</th>\n",
       "      <th>nivel_desemp_ciencias_naturales</th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>...</th>\n",
       "      <th>tiene_smartphone</th>\n",
       "      <th>tiene_consola</th>\n",
       "      <th>tiene_smarttv</th>\n",
       "      <th>tiene_cable</th>\n",
       "      <th>tiene_internet</th>\n",
       "      <th>repeticion_primaria</th>\n",
       "      <th>repeticion_secundaria</th>\n",
       "      <th>escuela_id</th>\n",
       "      <th>nivel_id</th>\n",
       "      <th>year_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>372547</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>120618006</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>372580</td>\n",
       "      <td>f</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>avanzado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15686325.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>220059411</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>372581</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>220099011</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>372582</td>\n",
       "      <td>m</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>220168311</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>372593</td>\n",
       "      <td>m</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>222762111</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>372601</td>\n",
       "      <td>f</td>\n",
       "      <td>alto</td>\n",
       "      <td>nc</td>\n",
       "      <td>avanzado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11619838.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>240865212</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>372611</td>\n",
       "      <td>m</td>\n",
       "      <td>alto</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>260107913</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>372617</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>260950313</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>372637</td>\n",
       "      <td>f</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13068876.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>281768214</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>372644</td>\n",
       "      <td>f</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>300276015</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>372655</td>\n",
       "      <td>nc</td>\n",
       "      <td>medio</td>\n",
       "      <td>nc</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37335227.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>302355015</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>372660</td>\n",
       "      <td>f</td>\n",
       "      <td>alto</td>\n",
       "      <td>nc</td>\n",
       "      <td>avanzado</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11679952.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>no</td>\n",
       "      <td>nc</td>\n",
       "      <td>320699216</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>372684</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>342014517</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>372692</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>360871218</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>372710</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>si</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>381126719</td>\n",
       "      <td>2</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id sexo indice_socioeconomico nivel_desemp_matematica   \n",
       "0   372547   nc                    nc                      nc  \\\n",
       "1   372580    f                 medio                      nc   \n",
       "2   372581   nc                    nc                      nc   \n",
       "3   372582    m                 medio                      nc   \n",
       "4   372593    m                    nc                      nc   \n",
       "5   372601    f                  alto                      nc   \n",
       "6   372611    m                  alto                      nc   \n",
       "7   372617   nc                    nc                      nc   \n",
       "8   372637    f                 medio                      nc   \n",
       "9   372644    f                 medio                      nc   \n",
       "10  372655   nc                 medio                      nc   \n",
       "11  372660    f                  alto                      nc   \n",
       "12  372684   nc                    nc                      nc   \n",
       "13  372692   nc                    nc                      nc   \n",
       "14  372710   nc                    nc                      nc   \n",
       "\n",
       "      nivel_desemp_lengua nivel_desemp_ciencias_sociales   \n",
       "0                      nc                            NaN  \\\n",
       "1                avanzado                            NaN   \n",
       "2                      nc                            NaN   \n",
       "3                      nc                            NaN   \n",
       "4                      nc                            NaN   \n",
       "5                avanzado                            NaN   \n",
       "6                      nc                            NaN   \n",
       "7                      nc                            NaN   \n",
       "8   por_debajo_del_basico                            NaN   \n",
       "9                      nc                            NaN   \n",
       "10          satisfactorio                            NaN   \n",
       "11               avanzado                            NaN   \n",
       "12                     nc                            NaN   \n",
       "13                     nc                            NaN   \n",
       "14                     nc                            NaN   \n",
       "\n",
       "   nivel_desemp_ciencias_naturales  ponderador_lengua  ponderador_matematica   \n",
       "0                              NaN                NaN                    NaN  \\\n",
       "1                              NaN         15686325.0                    NaN   \n",
       "2                              NaN                NaN                    NaN   \n",
       "3                              NaN                NaN                    NaN   \n",
       "4                              NaN                NaN                    NaN   \n",
       "5                              NaN         11619838.0                    NaN   \n",
       "6                              NaN                NaN                    NaN   \n",
       "7                              NaN                NaN                    NaN   \n",
       "8                              NaN         13068876.0                    NaN   \n",
       "9                              NaN                NaN                    NaN   \n",
       "10                             NaN         37335227.0                    NaN   \n",
       "11                             NaN         11679952.0                    NaN   \n",
       "12                             NaN                NaN                    NaN   \n",
       "13                             NaN                NaN                    NaN   \n",
       "14                             NaN                NaN                    NaN   \n",
       "\n",
       "    ponderador_ciencias_naturales  ...  tiene_smartphone tiene_consola   \n",
       "0                            -1.0  ...                nc            nc  \\\n",
       "1                            -1.0  ...                no            no   \n",
       "2                            -1.0  ...                nc            nc   \n",
       "3                            -1.0  ...                no            no   \n",
       "4                            -1.0  ...                nc            nc   \n",
       "5                            -1.0  ...                no            si   \n",
       "6                            -1.0  ...                si            si   \n",
       "7                            -1.0  ...                nc            nc   \n",
       "8                            -1.0  ...                no            no   \n",
       "9                            -1.0  ...                no            no   \n",
       "10                           -1.0  ...                no            no   \n",
       "11                           -1.0  ...                si            no   \n",
       "12                           -1.0  ...                si            si   \n",
       "13                           -1.0  ...                nc            nc   \n",
       "14                           -1.0  ...                si            si   \n",
       "\n",
       "   tiene_smarttv tiene_cable tiene_internet repeticion_primaria   \n",
       "0             nc          nc             nc                  nc  \\\n",
       "1             si          si             si                  no   \n",
       "2             nc          nc             nc                  nc   \n",
       "3             si          si             si                  no   \n",
       "4             nc          nc             nc                  no   \n",
       "5             no          si             si                  no   \n",
       "6             si          no             si                  no   \n",
       "7             nc          nc             nc                  nc   \n",
       "8             no          no             no                  no   \n",
       "9             si          si             si                  no   \n",
       "10            no          no             si                  no   \n",
       "11            si          si             si                  no   \n",
       "12            si          si             si                  nc   \n",
       "13            nc          nc             nc                  nc   \n",
       "14            si          si             si                  nc   \n",
       "\n",
       "   repeticion_secundaria escuela_id nivel_id year_id  \n",
       "0                     nc  120618006        2    2016  \n",
       "1                     nc  220059411        2    2016  \n",
       "2                     nc  220099011        2    2016  \n",
       "3                     nc  220168311        2    2016  \n",
       "4                     nc  222762111        2    2016  \n",
       "5                     nc  240865212        2    2016  \n",
       "6                     nc  260107913        2    2016  \n",
       "7                     nc  260950313        2    2016  \n",
       "8                     nc  281768214        2    2016  \n",
       "9                     nc  300276015        2    2016  \n",
       "10                    nc  302355015        2    2016  \n",
       "11                    nc  320699216        2    2016  \n",
       "12                    nc  342014517        2    2016  \n",
       "13                    nc  360871218        2    2016  \n",
       "14                    nc  381126719        2    2016  \n",
       "\n",
       "[15 rows x 25 columns]"
      ]
     },
     "execution_count": 726,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 727,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>sexo</th>\n",
       "      <th>indice_socioeconomico</th>\n",
       "      <th>nivel_desemp_matematica</th>\n",
       "      <th>nivel_desemp_lengua</th>\n",
       "      <th>nivel_desemp_ciencias_sociales</th>\n",
       "      <th>nivel_desemp_ciencias_naturales</th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>...</th>\n",
       "      <th>tiene_smartphone</th>\n",
       "      <th>tiene_consola</th>\n",
       "      <th>tiene_smarttv</th>\n",
       "      <th>tiene_cable</th>\n",
       "      <th>tiene_internet</th>\n",
       "      <th>repeticion_primaria</th>\n",
       "      <th>repeticion_secundaria</th>\n",
       "      <th>escuela_id</th>\n",
       "      <th>nivel_id</th>\n",
       "      <th>year_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1048570</th>\n",
       "      <td>372490</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>avanzado</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>13810811.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>14685918.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>27068807733</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1048571</th>\n",
       "      <td>372503</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>basico</td>\n",
       "      <td>16884559.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>18579443.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>27906066731</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1048572</th>\n",
       "      <td>372505</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>13071498.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>28383181233</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1048573</th>\n",
       "      <td>372511</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>16884559.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>28802867232</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1048574</th>\n",
       "      <td>372519</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>satisfactorio</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>por_debajo_del_basico</td>\n",
       "      <td>13071498.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>13933698.0</td>\n",
       "      <td>...</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>nc</td>\n",
       "      <td>29244413234</td>\n",
       "      <td>3</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id sexo indice_socioeconomico nivel_desemp_matematica   \n",
       "1048570  372490   nc                   NaN                      nc  \\\n",
       "1048571  372503   nc                   NaN                      nc   \n",
       "1048572  372505   nc                   NaN                      nc   \n",
       "1048573  372511   nc                   NaN                      nc   \n",
       "1048574  372519   nc                   NaN                      nc   \n",
       "\n",
       "           nivel_desemp_lengua nivel_desemp_ciencias_sociales   \n",
       "1048570          satisfactorio                       avanzado  \\\n",
       "1048571  por_debajo_del_basico          por_debajo_del_basico   \n",
       "1048572  por_debajo_del_basico                             nc   \n",
       "1048573          satisfactorio                             nc   \n",
       "1048574          satisfactorio          por_debajo_del_basico   \n",
       "\n",
       "        nivel_desemp_ciencias_naturales  ponderador_lengua   \n",
       "1048570                   satisfactorio         13810811.0  \\\n",
       "1048571                          basico         16884559.0   \n",
       "1048572                              nc         13071498.0   \n",
       "1048573                              nc         16884559.0   \n",
       "1048574           por_debajo_del_basico         13071498.0   \n",
       "\n",
       "         ponderador_matematica  ponderador_ciencias_naturales  ...   \n",
       "1048570                   -1.0                     14685918.0  ...  \\\n",
       "1048571                   -1.0                     18579443.0  ...   \n",
       "1048572                   -1.0                           -1.0  ...   \n",
       "1048573                   -1.0                           -1.0  ...   \n",
       "1048574                   -1.0                     13933698.0  ...   \n",
       "\n",
       "         tiene_smartphone tiene_consola tiene_smarttv tiene_cable   \n",
       "1048570                nc            nc            nc          nc  \\\n",
       "1048571                nc            nc            nc          nc   \n",
       "1048572                nc            nc            nc          nc   \n",
       "1048573                nc            nc            nc          nc   \n",
       "1048574                nc            nc            nc          nc   \n",
       "\n",
       "        tiene_internet repeticion_primaria repeticion_secundaria   escuela_id   \n",
       "1048570             nc                  nc                    nc  27068807733  \\\n",
       "1048571             nc                  nc                    nc  27906066731   \n",
       "1048572             nc                  nc                    nc  28383181233   \n",
       "1048573             nc                  nc                    nc  28802867232   \n",
       "1048574             nc                  nc                    nc  29244413234   \n",
       "\n",
       "        nivel_id year_id  \n",
       "1048570        3    2013  \n",
       "1048571        3    2013  \n",
       "1048572        3    2013  \n",
       "1048573        3    2013  \n",
       "1048574        3    2013  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 727,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 728,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(['id','sexo', 'nivel_desemp_matematica','nivel_desemp_lengua','nivel_desemp_ciencias_sociales','nivel_desemp_ciencias_naturales','escuela_id','nivel_id','year_id'], axis='columns', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 729,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Elimino las filas con el valor de no contesta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 730,
   "metadata": {},
   "outputs": [],
   "source": [
    "valor_a_eliminar = 'nc'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 731,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(df[df.values == valor_a_eliminar].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 732,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>ponderador_ciencias_sociales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7.901000e+03</td>\n",
       "      <td>8.160000e+03</td>\n",
       "      <td>7.637000e+03</td>\n",
       "      <td>7.983000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.365120e+07</td>\n",
       "      <td>1.264564e+07</td>\n",
       "      <td>1.391279e+07</td>\n",
       "      <td>1.312797e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.282406e+07</td>\n",
       "      <td>1.029948e+07</td>\n",
       "      <td>1.108285e+07</td>\n",
       "      <td>1.069096e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.018872e+07</td>\n",
       "      <td>1.008834e+07</td>\n",
       "      <td>1.037718e+07</td>\n",
       "      <td>1.026119e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.191022e+07</td>\n",
       "      <td>1.197619e+07</td>\n",
       "      <td>1.240713e+07</td>\n",
       "      <td>1.211469e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.590190e+07</td>\n",
       "      <td>1.592683e+07</td>\n",
       "      <td>1.644164e+07</td>\n",
       "      <td>1.629795e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.767036e+07</td>\n",
       "      <td>9.229690e+07</td>\n",
       "      <td>9.835092e+07</td>\n",
       "      <td>8.897400e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       ponderador_lengua  ponderador_matematica   \n",
       "count       7.901000e+03           8.160000e+03  \\\n",
       "mean        1.365120e+07           1.264564e+07   \n",
       "std         1.282406e+07           1.029948e+07   \n",
       "min         1.000000e+00           1.000000e+00   \n",
       "25%         1.018872e+07           1.008834e+07   \n",
       "50%         1.191022e+07           1.197619e+07   \n",
       "75%         1.590190e+07           1.592683e+07   \n",
       "max         9.767036e+07           9.229690e+07   \n",
       "\n",
       "       ponderador_ciencias_naturales  ponderador_ciencias_sociales  \n",
       "count                   7.637000e+03                  7.983000e+03  \n",
       "mean                    1.391279e+07                  1.312797e+07  \n",
       "std                     1.108285e+07                  1.069096e+07  \n",
       "min                     1.000000e+00                  1.000000e+00  \n",
       "25%                     1.037718e+07                  1.026119e+07  \n",
       "50%                     1.240713e+07                  1.211469e+07  \n",
       "75%                     1.644164e+07                  1.629795e+07  \n",
       "max                     9.835092e+07                  8.897400e+07  "
      ]
     },
     "execution_count": 732,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 733,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 734,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.indice_socioeconomico =df.indice_socioeconomico.map({'alto':0,'bajo':1,'medio':2})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 735,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_notebook =df.tiene_notebook.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 736,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_pc =df.tiene_pc.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 737,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_tablet =df.tiene_tablet.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 738,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_celular =df.tiene_celular.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 739,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_smartphone =df.tiene_smartphone.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 740,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_consola =df.tiene_consola.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 741,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_smarttv =df.tiene_smarttv.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 742,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_cable =df.tiene_cable.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 743,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.tiene_internet =df.tiene_internet.map({'si':0,'no':1})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 744,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.repeticion_primaria =df.repeticion_primaria.map({'una_vez':0,'dos_veces':1,'tres_veces_o_mas':2,'no':3})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 745,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.repeticion_secundaria =df.repeticion_secundaria.map({'una_vez':0,'dos_veces':1,'tres_veces_o_mas':2,'no':3})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 746,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_x = df.drop('repeticion_secundaria', axis=1)\n",
    "data_y = df.repeticion_secundaria"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 747,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_x, test_x, train_y, test_y = train_test_split(data_x, data_y, test_size=0.1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 748,
   "metadata": {},
   "outputs": [],
   "source": [
    "decission_tree = tree.DecisionTreeClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 749,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-9 {color: black;background-color: white;}#sk-container-id-9 pre{padding: 0;}#sk-container-id-9 div.sk-toggleable {background-color: white;}#sk-container-id-9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-9 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-9 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-9 div.sk-item {position: relative;z-index: 1;}#sk-container-id-9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-9 div.sk-item::before, #sk-container-id-9 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-9 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-9 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-9 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-9 div.sk-label-container {text-align: center;}#sk-container-id-9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-9 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier()"
      ]
     },
     "execution_count": 749,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "decission_tree.fit(train_x, train_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 750,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>indice_socioeconomico</th>\n",
       "      <th>ponderador_lengua</th>\n",
       "      <th>ponderador_matematica</th>\n",
       "      <th>ponderador_ciencias_naturales</th>\n",
       "      <th>ponderador_ciencias_sociales</th>\n",
       "      <th>tiene_notebook</th>\n",
       "      <th>tiene_pc</th>\n",
       "      <th>tiene_tablet</th>\n",
       "      <th>tiene_celular</th>\n",
       "      <th>tiene_smartphone</th>\n",
       "      <th>tiene_consola</th>\n",
       "      <th>tiene_smarttv</th>\n",
       "      <th>tiene_cable</th>\n",
       "      <th>tiene_internet</th>\n",
       "      <th>repeticion_primaria</th>\n",
       "      <th>repeticion_secundaria</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6.387000e+03</td>\n",
       "      <td>6.387000e+03</td>\n",
       "      <td>6.387000e+03</td>\n",
       "      <td>6.387000e+03</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "      <td>6387.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.450133</td>\n",
       "      <td>1.275851e+07</td>\n",
       "      <td>1.184815e+07</td>\n",
       "      <td>1.326880e+07</td>\n",
       "      <td>1.238272e+07</td>\n",
       "      <td>0.259746</td>\n",
       "      <td>0.371066</td>\n",
       "      <td>0.650697</td>\n",
       "      <td>0.123219</td>\n",
       "      <td>0.600282</td>\n",
       "      <td>0.620009</td>\n",
       "      <td>0.486927</td>\n",
       "      <td>0.348834</td>\n",
       "      <td>0.252231</td>\n",
       "      <td>2.822295</td>\n",
       "      <td>2.579145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.797238</td>\n",
       "      <td>1.145383e+07</td>\n",
       "      <td>9.497329e+06</td>\n",
       "      <td>1.006893e+07</td>\n",
       "      <td>9.969980e+06</td>\n",
       "      <td>0.438530</td>\n",
       "      <td>0.483128</td>\n",
       "      <td>0.476787</td>\n",
       "      <td>0.328714</td>\n",
       "      <td>0.489879</td>\n",
       "      <td>0.485422</td>\n",
       "      <td>0.499868</td>\n",
       "      <td>0.476639</td>\n",
       "      <td>0.434327</td>\n",
       "      <td>0.697778</td>\n",
       "      <td>1.000841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.011767e+07</td>\n",
       "      <td>1.004593e+07</td>\n",
       "      <td>1.030098e+07</td>\n",
       "      <td>1.022637e+07</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.178562e+07</td>\n",
       "      <td>1.173553e+07</td>\n",
       "      <td>1.209267e+07</td>\n",
       "      <td>1.175928e+07</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.540802e+07</td>\n",
       "      <td>1.512500e+07</td>\n",
       "      <td>1.597413e+07</td>\n",
       "      <td>1.560333e+07</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>9.767036e+07</td>\n",
       "      <td>9.229690e+07</td>\n",
       "      <td>9.066093e+07</td>\n",
       "      <td>8.897400e+07</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       indice_socioeconomico  ponderador_lengua  ponderador_matematica   \n",
       "count            6387.000000       6.387000e+03           6.387000e+03  \\\n",
       "mean                1.450133       1.275851e+07           1.184815e+07   \n",
       "std                 0.797238       1.145383e+07           9.497329e+06   \n",
       "min                 0.000000       1.000000e+00           1.000000e+00   \n",
       "25%                 1.000000       1.011767e+07           1.004593e+07   \n",
       "50%                 2.000000       1.178562e+07           1.173553e+07   \n",
       "75%                 2.000000       1.540802e+07           1.512500e+07   \n",
       "max                 2.000000       9.767036e+07           9.229690e+07   \n",
       "\n",
       "       ponderador_ciencias_naturales  ponderador_ciencias_sociales   \n",
       "count                   6.387000e+03                  6.387000e+03  \\\n",
       "mean                    1.326880e+07                  1.238272e+07   \n",
       "std                     1.006893e+07                  9.969980e+06   \n",
       "min                     1.000000e+00                  1.000000e+00   \n",
       "25%                     1.030098e+07                  1.022637e+07   \n",
       "50%                     1.209267e+07                  1.175928e+07   \n",
       "75%                     1.597413e+07                  1.560333e+07   \n",
       "max                     9.066093e+07                  8.897400e+07   \n",
       "\n",
       "       tiene_notebook     tiene_pc  tiene_tablet  tiene_celular   \n",
       "count     6387.000000  6387.000000   6387.000000    6387.000000  \\\n",
       "mean         0.259746     0.371066      0.650697       0.123219   \n",
       "std          0.438530     0.483128      0.476787       0.328714   \n",
       "min          0.000000     0.000000      0.000000       0.000000   \n",
       "25%          0.000000     0.000000      0.000000       0.000000   \n",
       "50%          0.000000     0.000000      1.000000       0.000000   \n",
       "75%          1.000000     1.000000      1.000000       0.000000   \n",
       "max          1.000000     1.000000      1.000000       1.000000   \n",
       "\n",
       "       tiene_smartphone  tiene_consola  tiene_smarttv  tiene_cable   \n",
       "count       6387.000000    6387.000000    6387.000000  6387.000000  \\\n",
       "mean           0.600282       0.620009       0.486927     0.348834   \n",
       "std            0.489879       0.485422       0.499868     0.476639   \n",
       "min            0.000000       0.000000       0.000000     0.000000   \n",
       "25%            0.000000       0.000000       0.000000     0.000000   \n",
       "50%            1.000000       1.000000       0.000000     0.000000   \n",
       "75%            1.000000       1.000000       1.000000     1.000000   \n",
       "max            1.000000       1.000000       1.000000     1.000000   \n",
       "\n",
       "       tiene_internet  repeticion_primaria  repeticion_secundaria  \n",
       "count     6387.000000          6387.000000            6387.000000  \n",
       "mean         0.252231             2.822295               2.579145  \n",
       "std          0.434327             0.697778               1.000841  \n",
       "min          0.000000             0.000000               0.000000  \n",
       "25%          0.000000             3.000000               3.000000  \n",
       "50%          0.000000             3.000000               3.000000  \n",
       "75%          1.000000             3.000000               3.000000  \n",
       "max          1.000000             3.000000               3.000000  "
      ]
     },
     "execution_count": 750,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 751,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Score: 72.3%\n"
     ]
    }
   ],
   "source": [
    "print(f'Score: {round(decission_tree.score(test_x, test_y), 4) * 100.0}%')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 752,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['indice_socioeconomico',\n",
       " 'ponderador_lengua',\n",
       " 'ponderador_matematica',\n",
       " 'ponderador_ciencias_naturales',\n",
       " 'ponderador_ciencias_sociales',\n",
       " 'tiene_notebook',\n",
       " 'tiene_pc',\n",
       " 'tiene_tablet',\n",
       " 'tiene_celular',\n",
       " 'tiene_smartphone',\n",
       " 'tiene_consola',\n",
       " 'tiene_smarttv',\n",
       " 'tiene_cable',\n",
       " 'tiene_internet',\n",
       " 'repeticion_primaria',\n",
       " 'repeticion_secundaria']"
      ]
     },
     "execution_count": 752,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns.tolist()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "institucion_env",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
